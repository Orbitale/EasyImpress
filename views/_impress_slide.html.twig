{% spaceless %}
<div id="impress"
    {% if slider.config.data %}{% for key, value in slider.config.data if value is not null %} data-{{ key }}="{{ value }}"{% endfor %}{% endif %}
    {% if slider.config.attr %}{% for key, value in slider.config.attr if value is not null %} {{ key }}="{{ value }}"{% endfor %}{% endif %}>

    {# Paramètres de calcul automatique des coordonnées d'un slide par simple incrémentation #}
    {% set increments = {} %}
    {% if slider.config.increments %}
        {% for incType, inc in slider.config.increments %}
            {% if inc.base is defined %}
                {% set increments = increments | merge({ (incType): { current : inc.base, base: inc.base, i: inc.i } }) %}
            {% endif %}
        {% endfor %}
    {% endif %}


    {% for id, slide in slider.slides %}

        {# Override de l'id si jamais on utilise l'attribut "id" d'un slide #}
        {% if slide.id %}
            {% set id = slide.id %}
        {% endif %}

        {# Définit le tableau DATA à utiliser pour ce slide #}
        {% set data = slide.data is not empty ? slide.data : {} %}

        {# Définit le tableau ATTR à utiliser pour ce slide #}
        {% set attr = slide.attr is not empty ? slide.attr : {} %}

        {# Permet d'avoir une incrémentation régulière de certaines données en fonction des paramètres du slider #}
        {% for incType, incDatas in increments %}
            {% if slide['reset'~(incType|upper)] is defined and slide['reset'~(incType|upper)] == true %}
                {% set increments = increments | merge( { (incType): (incDatas | merge({ current: incDatas.base })) } ) %}
            {% else %}
                {% set increments = increments | merge( { (incType): (incDatas | merge({ current: incDatas.current + incDatas.i })) } ) %}
            {% endif %}
            {% set data = data | merge({ (incType): incDatas.current }) %}
        {% endfor %}

        {# Paramétrage des images de fond #}
        {% if slide.image == true %}
            {% set imageStyle = 'background-image: url(\''~url('sliderImg', {'sliderName': name, 'slideId': id})~'\');' %}
            {% set attr = attr | merge({style : ((attr.style is defined ? attr.style ~ ';' : '') ~ imageStyle) }) %}
            {% set attr = attr | merge({class: (attr.class is defined ? attr.class~' ' : '')~'stepImage'}) %}
            {% set data = data | merge({image: "true"}) %}
        {% endif %}

        <div {% if id is numeric %}id="slide_{{ name }}_{{ id }}"{% else %} id="{{ id }}"{% endif %}
            {% if data %}{% for key, value in data if value is not null %} data-{{ key }}="{{ value }}"{% endfor %}{% endif %}
            {% if attr %}{% for key, value in attr if value is not null %} {{ key }}="{{ value | raw }}"{% endfor %}{% endif %}
        >
            {% if slide.view is defined and slide.view == true %}
                {% include '@Sliders:'~name~'/'~id~'.html.twig' %}
            {% else %}
                {% if slide.text is defined and (slide.text|trans) is not empty %}
                    {% if slide.wrapWithTag is defined and slide.wrapWithTag is not empty %}<{{ slide.wrapWithTag }}>{% endif %}
                        {{ slide.text|trans|raw }}
                    {% if slide.wrapWithTag is defined and slide.wrapWithTag is not empty %}</{{ slide.wrapWithTag }}>{% endif %}
                {% else %}
                    &nbsp;
                {% endif %}
                {% if slide.credits is defined and (slide.credits | trans) is not empty %}
                    <div class="credits">
                        <span class="credit-collapse glyphicon glyphicon-chevron-up"></span>
                        <div class="credits-inner">{{ slide.credits|trans|raw }}</div>
                    </div>
                {% endif %}
            {% endif %}
        </div>

    {% endfor %}

</div><!-- /#impress -->
{% endspaceless %}